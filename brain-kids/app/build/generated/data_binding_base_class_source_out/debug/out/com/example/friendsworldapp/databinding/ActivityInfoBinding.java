// Generated by view binder compiler. Do not edit!
package com.example.friendsworldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.friendsworldapp.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView BackLabelUnderIcons;

  @NonNull
  public final RecyclerView ItemsInfo;

  @NonNull
  public final Button buttonInfoDiscount;

  @NonNull
  public final ImageView imageClose;

  @NonNull
  public final ImageView imageHome;

  @NonNull
  public final ImageView imageInfo;

  @NonNull
  public final ImageView imagePerson;

  @NonNull
  public final ImageView imageViewLogo;

  @NonNull
  public final ShapeableImageView labelHintInfo;

  @NonNull
  public final ShapeableImageView labelUnderText;

  @NonNull
  public final TextView textInfo1;

  @NonNull
  public final TextView textInfo2;

  @NonNull
  public final TextView textInfolabel1;

  @NonNull
  public final TextView textInfolabel2;

  @NonNull
  public final TextView textInfolabel3;

  @NonNull
  public final TextView textInfolabel4;

  @NonNull
  public final TextView textInfolabel5;

  @NonNull
  public final TextView textInfolabel6;

  @NonNull
  public final TextView textOurses;

  private ActivityInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView BackLabelUnderIcons, @NonNull RecyclerView ItemsInfo,
      @NonNull Button buttonInfoDiscount, @NonNull ImageView imageClose,
      @NonNull ImageView imageHome, @NonNull ImageView imageInfo, @NonNull ImageView imagePerson,
      @NonNull ImageView imageViewLogo, @NonNull ShapeableImageView labelHintInfo,
      @NonNull ShapeableImageView labelUnderText, @NonNull TextView textInfo1,
      @NonNull TextView textInfo2, @NonNull TextView textInfolabel1,
      @NonNull TextView textInfolabel2, @NonNull TextView textInfolabel3,
      @NonNull TextView textInfolabel4, @NonNull TextView textInfolabel5,
      @NonNull TextView textInfolabel6, @NonNull TextView textOurses) {
    this.rootView = rootView;
    this.BackLabelUnderIcons = BackLabelUnderIcons;
    this.ItemsInfo = ItemsInfo;
    this.buttonInfoDiscount = buttonInfoDiscount;
    this.imageClose = imageClose;
    this.imageHome = imageHome;
    this.imageInfo = imageInfo;
    this.imagePerson = imagePerson;
    this.imageViewLogo = imageViewLogo;
    this.labelHintInfo = labelHintInfo;
    this.labelUnderText = labelUnderText;
    this.textInfo1 = textInfo1;
    this.textInfo2 = textInfo2;
    this.textInfolabel1 = textInfolabel1;
    this.textInfolabel2 = textInfolabel2;
    this.textInfolabel3 = textInfolabel3;
    this.textInfolabel4 = textInfolabel4;
    this.textInfolabel5 = textInfolabel5;
    this.textInfolabel6 = textInfolabel6;
    this.textOurses = textOurses;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BackLabelUnderIcons;
      ImageView BackLabelUnderIcons = ViewBindings.findChildViewById(rootView, id);
      if (BackLabelUnderIcons == null) {
        break missingId;
      }

      id = R.id.Items_info;
      RecyclerView ItemsInfo = ViewBindings.findChildViewById(rootView, id);
      if (ItemsInfo == null) {
        break missingId;
      }

      id = R.id.buttonInfoDiscount;
      Button buttonInfoDiscount = ViewBindings.findChildViewById(rootView, id);
      if (buttonInfoDiscount == null) {
        break missingId;
      }

      id = R.id.imageClose;
      ImageView imageClose = ViewBindings.findChildViewById(rootView, id);
      if (imageClose == null) {
        break missingId;
      }

      id = R.id.imageHome;
      ImageView imageHome = ViewBindings.findChildViewById(rootView, id);
      if (imageHome == null) {
        break missingId;
      }

      id = R.id.imageInfo;
      ImageView imageInfo = ViewBindings.findChildViewById(rootView, id);
      if (imageInfo == null) {
        break missingId;
      }

      id = R.id.imagePerson;
      ImageView imagePerson = ViewBindings.findChildViewById(rootView, id);
      if (imagePerson == null) {
        break missingId;
      }

      id = R.id.imageViewLogo;
      ImageView imageViewLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLogo == null) {
        break missingId;
      }

      id = R.id.labelHintInfo;
      ShapeableImageView labelHintInfo = ViewBindings.findChildViewById(rootView, id);
      if (labelHintInfo == null) {
        break missingId;
      }

      id = R.id.labelUnderText;
      ShapeableImageView labelUnderText = ViewBindings.findChildViewById(rootView, id);
      if (labelUnderText == null) {
        break missingId;
      }

      id = R.id.textInfo1;
      TextView textInfo1 = ViewBindings.findChildViewById(rootView, id);
      if (textInfo1 == null) {
        break missingId;
      }

      id = R.id.textInfo2;
      TextView textInfo2 = ViewBindings.findChildViewById(rootView, id);
      if (textInfo2 == null) {
        break missingId;
      }

      id = R.id.textInfolabel1;
      TextView textInfolabel1 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel1 == null) {
        break missingId;
      }

      id = R.id.textInfolabel2;
      TextView textInfolabel2 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel2 == null) {
        break missingId;
      }

      id = R.id.textInfolabel3;
      TextView textInfolabel3 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel3 == null) {
        break missingId;
      }

      id = R.id.textInfolabel4;
      TextView textInfolabel4 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel4 == null) {
        break missingId;
      }

      id = R.id.textInfolabel5;
      TextView textInfolabel5 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel5 == null) {
        break missingId;
      }

      id = R.id.textInfolabel6;
      TextView textInfolabel6 = ViewBindings.findChildViewById(rootView, id);
      if (textInfolabel6 == null) {
        break missingId;
      }

      id = R.id.text–°ourses;
      TextView textOurses = ViewBindings.findChildViewById(rootView, id);
      if (textOurses == null) {
        break missingId;
      }

      return new ActivityInfoBinding((ConstraintLayout) rootView, BackLabelUnderIcons, ItemsInfo,
          buttonInfoDiscount, imageClose, imageHome, imageInfo, imagePerson, imageViewLogo,
          labelHintInfo, labelUnderText, textInfo1, textInfo2, textInfolabel1, textInfolabel2,
          textInfolabel3, textInfolabel4, textInfolabel5, textInfolabel6, textOurses);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
