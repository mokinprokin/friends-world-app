// Generated by view binder compiler. Do not edit!
package com.example.friendsworldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.friendsworldapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView MotivateText;

  @NonNull
  public final Button button;

  @NonNull
  public final ImageView logotype;

  @NonNull
  public final TextInputEditText textLogin;

  @NonNull
  public final TextInputLayout textLoginLayout;

  @NonNull
  public final TextInputEditText textPassword;

  @NonNull
  public final TextInputLayout textPasswordLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView MotivateText,
      @NonNull Button button, @NonNull ImageView logotype, @NonNull TextInputEditText textLogin,
      @NonNull TextInputLayout textLoginLayout, @NonNull TextInputEditText textPassword,
      @NonNull TextInputLayout textPasswordLayout) {
    this.rootView = rootView;
    this.MotivateText = MotivateText;
    this.button = button;
    this.logotype = logotype;
    this.textLogin = textLogin;
    this.textLoginLayout = textLoginLayout;
    this.textPassword = textPassword;
    this.textPasswordLayout = textPasswordLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MotivateText;
      TextView MotivateText = ViewBindings.findChildViewById(rootView, id);
      if (MotivateText == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.logotype;
      ImageView logotype = ViewBindings.findChildViewById(rootView, id);
      if (logotype == null) {
        break missingId;
      }

      id = R.id.textLogin;
      TextInputEditText textLogin = ViewBindings.findChildViewById(rootView, id);
      if (textLogin == null) {
        break missingId;
      }

      id = R.id.textLoginLayout;
      TextInputLayout textLoginLayout = ViewBindings.findChildViewById(rootView, id);
      if (textLoginLayout == null) {
        break missingId;
      }

      id = R.id.textPassword;
      TextInputEditText textPassword = ViewBindings.findChildViewById(rootView, id);
      if (textPassword == null) {
        break missingId;
      }

      id = R.id.textPasswordLayout;
      TextInputLayout textPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (textPasswordLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, MotivateText, button, logotype,
          textLogin, textLoginLayout, textPassword, textPasswordLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
