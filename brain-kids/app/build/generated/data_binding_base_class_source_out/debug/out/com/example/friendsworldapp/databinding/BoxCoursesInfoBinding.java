// Generated by view binder compiler. Do not edit!
package com.example.friendsworldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.friendsworldapp.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BoxCoursesInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonInfo;

  @NonNull
  public final ImageView imagePhoto;

  @NonNull
  public final TextView nameViewInfo;

  @NonNull
  public final ShapeableImageView shapeableImageView;

  private BoxCoursesInfoBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonInfo,
      @NonNull ImageView imagePhoto, @NonNull TextView nameViewInfo,
      @NonNull ShapeableImageView shapeableImageView) {
    this.rootView = rootView;
    this.buttonInfo = buttonInfo;
    this.imagePhoto = imagePhoto;
    this.nameViewInfo = nameViewInfo;
    this.shapeableImageView = shapeableImageView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BoxCoursesInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BoxCoursesInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.box_courses_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BoxCoursesInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonInfo;
      Button buttonInfo = ViewBindings.findChildViewById(rootView, id);
      if (buttonInfo == null) {
        break missingId;
      }

      id = R.id.imagePhoto;
      ImageView imagePhoto = ViewBindings.findChildViewById(rootView, id);
      if (imagePhoto == null) {
        break missingId;
      }

      id = R.id.nameViewInfo;
      TextView nameViewInfo = ViewBindings.findChildViewById(rootView, id);
      if (nameViewInfo == null) {
        break missingId;
      }

      id = R.id.shapeableImageView;
      ShapeableImageView shapeableImageView = ViewBindings.findChildViewById(rootView, id);
      if (shapeableImageView == null) {
        break missingId;
      }

      return new BoxCoursesInfoBinding((ConstraintLayout) rootView, buttonInfo, imagePhoto,
          nameViewInfo, shapeableImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
