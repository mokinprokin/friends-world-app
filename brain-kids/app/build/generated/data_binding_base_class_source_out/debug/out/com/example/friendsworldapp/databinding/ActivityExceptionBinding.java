// Generated by view binder compiler. Do not edit!
package com.example.friendsworldapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.friendsworldapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExceptionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardException1;

  @NonNull
  public final CardView cardException2;

  @NonNull
  public final CardView cardException3;

  @NonNull
  public final CardView cardException4;

  @NonNull
  public final CardView cardException5;

  @NonNull
  public final CardView cardException6;

  @NonNull
  public final ImageView imageBack;

  @NonNull
  public final TextView textException1;

  @NonNull
  public final TextView textException2;

  @NonNull
  public final TextView textException3;

  @NonNull
  public final TextView textException4;

  @NonNull
  public final TextView textException5;

  @NonNull
  public final TextView textException6;

  private ActivityExceptionBinding(@NonNull LinearLayout rootView, @NonNull CardView cardException1,
      @NonNull CardView cardException2, @NonNull CardView cardException3,
      @NonNull CardView cardException4, @NonNull CardView cardException5,
      @NonNull CardView cardException6, @NonNull ImageView imageBack,
      @NonNull TextView textException1, @NonNull TextView textException2,
      @NonNull TextView textException3, @NonNull TextView textException4,
      @NonNull TextView textException5, @NonNull TextView textException6) {
    this.rootView = rootView;
    this.cardException1 = cardException1;
    this.cardException2 = cardException2;
    this.cardException3 = cardException3;
    this.cardException4 = cardException4;
    this.cardException5 = cardException5;
    this.cardException6 = cardException6;
    this.imageBack = imageBack;
    this.textException1 = textException1;
    this.textException2 = textException2;
    this.textException3 = textException3;
    this.textException4 = textException4;
    this.textException5 = textException5;
    this.textException6 = textException6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExceptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExceptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exception, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExceptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_exception1;
      CardView cardException1 = ViewBindings.findChildViewById(rootView, id);
      if (cardException1 == null) {
        break missingId;
      }

      id = R.id.card_exception2;
      CardView cardException2 = ViewBindings.findChildViewById(rootView, id);
      if (cardException2 == null) {
        break missingId;
      }

      id = R.id.card_exception3;
      CardView cardException3 = ViewBindings.findChildViewById(rootView, id);
      if (cardException3 == null) {
        break missingId;
      }

      id = R.id.card_exception4;
      CardView cardException4 = ViewBindings.findChildViewById(rootView, id);
      if (cardException4 == null) {
        break missingId;
      }

      id = R.id.card_exception5;
      CardView cardException5 = ViewBindings.findChildViewById(rootView, id);
      if (cardException5 == null) {
        break missingId;
      }

      id = R.id.card_exception6;
      CardView cardException6 = ViewBindings.findChildViewById(rootView, id);
      if (cardException6 == null) {
        break missingId;
      }

      id = R.id.imageBack;
      ImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.text_exception1;
      TextView textException1 = ViewBindings.findChildViewById(rootView, id);
      if (textException1 == null) {
        break missingId;
      }

      id = R.id.text_exception2;
      TextView textException2 = ViewBindings.findChildViewById(rootView, id);
      if (textException2 == null) {
        break missingId;
      }

      id = R.id.text_exception3;
      TextView textException3 = ViewBindings.findChildViewById(rootView, id);
      if (textException3 == null) {
        break missingId;
      }

      id = R.id.text_exception4;
      TextView textException4 = ViewBindings.findChildViewById(rootView, id);
      if (textException4 == null) {
        break missingId;
      }

      id = R.id.text_exception5;
      TextView textException5 = ViewBindings.findChildViewById(rootView, id);
      if (textException5 == null) {
        break missingId;
      }

      id = R.id.text_exception6;
      TextView textException6 = ViewBindings.findChildViewById(rootView, id);
      if (textException6 == null) {
        break missingId;
      }

      return new ActivityExceptionBinding((LinearLayout) rootView, cardException1, cardException2,
          cardException3, cardException4, cardException5, cardException6, imageBack, textException1,
          textException2, textException3, textException4, textException5, textException6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
